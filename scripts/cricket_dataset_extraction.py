# -*- coding: utf-8 -*-
"""CricketDatasetExtraction.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1GhR1gTlzWmf53VcMFyB8x-0FijMjw9VS
"""
import os
import subprocess
from pydub import AudioSegment
import pysrt
import whisper
import ffmpeg
from datetime import timedelta
import shutil

VIDEO_URL = "https://www.youtube.com/watch?v=2WrZy5gmNqM"

# Download auto subtitles
subprocess.run([
    "yt-dlp",
    "--write-auto-sub",
    "--sub-lang", "en",
    "--skip-download",
    VIDEO_URL
])

# Download best audio
subprocess.run([
    "yt-dlp",
    "-f", "bestaudio",
    "-o", "audio.%(ext)s",
    VIDEO_URL
])

# Convert to WAV using ffmpeg-python
# Assumes yt-dlp saved audio as audio.webm
ffmpeg.input("audio.webm").output("audio.wav", ar=22050, ac=1, sample_fmt='s16').run()

# Transcribe using Whisper
model = whisper.load_model("base")
result = model.transcribe("audio.wav", verbose=True)

# Save transcript as SRT
with open("captions.srt", "w", encoding="utf-8") as f:
    for i, segment in enumerate(result["segments"], start=1):
        start = str(timedelta(seconds=segment['start']))
        end = str(timedelta(seconds=segment['end']))
        text = segment['text'].strip()
        f.write(f"{i}\n{start} --> {end}\n{text}\n\n")

# Segment audio and write metadata
audio = AudioSegment.from_wav("audio.wav")
subs = pysrt.open("captions.srt")

os.makedirs("wavs", exist_ok=True)

with open("metadata.csv", "w", encoding="utf-8") as f:
    for i, sub in enumerate(subs):
        start = sub.start.ordinal  # milliseconds
        end = sub.end.ordinal      # milliseconds
        segment = audio[start:end]

        fname = f"{i:04d}.wav"
        segment.export(f"wavs/{fname}", format="wav")

        text = sub.text.replace('\n', ' ').strip()
        f.write(f"{fname}|{text}\n")

# Zip the output folder
shutil.make_archive("tts_data", 'zip', ".", "wavs")

print("Done. Transcription, segmentation, and packaging complete.")